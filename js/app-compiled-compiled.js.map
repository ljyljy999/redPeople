{"version":3,"sources":["app-compiled.js"],"names":[],"mappings":"AAAA;;AAEA,CAAC,UAAU,GAAV,EAAe;AACR,YAAI,QAAQ,IAAI,QAAJ,CAAa,eAAzB;AACA,YAAI,OAAO,IAAX;AACA,iBAAS,UAAT,GAAsB;AACd,oBAAI,QAAQ,MAAM,qBAAN,GAA8B,KAA1C;AACA,oBAAI,QAAQ,GAAZ,EAAiB;AACT;AACA,gCAAQ,GAAR;AACP;AACD;AACA,oBAAI,MAAM,QAAQ,GAAlB;AACA,oBAAI,MAAM,GAAV,EAAe;AACP,8BAAM,GAAN;AACP;AACD,sBAAM,KAAN,CAAY,QAAZ,GAAuB,MAAM,IAA7B;AACP;AACD,YAAI,gBAAJ,CAAqB,QAArB,EAA+B,YAAY;AACnC,6BAAa,IAAb;AACA,uBAAO,WAAW,UAAX,EAAuB,CAAvB,CAAP;AACP,SAHD,EAGG,KAHH;AAIA,YAAI,gBAAJ,CAAqB,UAArB,EAAiC,UAAU,CAAV,EAAa;AACtC,oBAAI,EAAE,SAAN,EAAiB;AACT,qCAAa,IAAb;AACA,+BAAO,WAAW,UAAX,EAAuB,CAAvB,CAAP;AACP;AACR,SALD,EAKG,KALH;AAMA;AACP,CA3BD,EA2BG,MA3BH;AA4BA;AACA;AACA;AACA;;AAEA","file":"app-compiled-compiled.js","sourcesContent":["'use strict';\n\n(function (win) {\n        var docEl = win.document.documentElement;\n        var time = null;\n        function refreshRem() {\n                var width = docEl.getBoundingClientRect().width;\n                if (width > 740) {\n                        // 最大宽度\n                        width = 750;\n                }\n                // 将屏幕宽度分成7.5份， 1份为1rem,1rem=100px\n                var rem = width / 7.5;\n                if (rem > 100) {\n                        rem = 100;\n                }\n                docEl.style.fontSize = rem + 'px';\n        }\n        win.addEventListener('resize', function () {\n                clearTimeout(time);\n                time = setTimeout(refreshRem, 1);\n        }, false);\n        win.addEventListener('pageshow', function (e) {\n                if (e.persisted) {\n                        clearTimeout(time);\n                        time = setTimeout(refreshRem, 1);\n                }\n        }, false);\n        refreshRem();\n})(window);\n//getBoundingClientRect()；该方法获得页面中某个元素的左，上，右和下分别相对浏览器视窗的位置，他返回的是一个对象，即Object,有6个属性 top 、bottom、right、left、width和height\n//以前getBoundingClientRect()是IE特有的，目前FF3+，opera9.5+，safari 4，都已经支持这个方法。\n//onpageshow 事件类似于 onload 事件，onload 事件在页面第一次加载时触发， onpageshow 事件在每次加载页面时触发，即 onload 事件在页面从浏览器缓存中读取时不触发。\n//为了查看页面是直接从服务器上载入还是从缓存中读取，可以使用 PageTransitionEvent 对象的 persisted 属性来判断。 如果页面从浏览器的缓存中读取该属性返回 true，否则返回 false\n\n//# sourceMappingURL=app-compiled.js.map"]}